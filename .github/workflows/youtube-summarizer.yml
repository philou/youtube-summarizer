name: YouTube Summarizer

on:
  schedule:
    # Run daily at 9 AM UTC
    - cron: '0 9 * * *'
  workflow_dispatch: # Allow manual trigger
    inputs:
      max_summaries:
        description: 'Maximum number of summaries to generate'
        required: false
        default: '5'
        type: string

jobs:
  summarize:
    # Only run on branches that start with 'channel-'
    if: startsWith(github.ref_name, 'channel-')
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        # Fetch full history to ensure we can commit
        fetch-depth: 0
        # Use a token that can push to protected branches if needed
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Extract channel ID from branch name
      id: channel
      run: |
        # Extract channel ID from branch name (e.g., 'channel-UCoVoOvIX90IMEZCbBf_ycEA' -> 'UCoVoOvIX90IMEZCbBf_ycEA')
        CHANNEL_ID="${GITHUB_REF_NAME#channel-}"
        echo "channel_id=$CHANNEL_ID" >> $GITHUB_OUTPUT
        echo "Channel ID: $CHANNEL_ID"

    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

    - name: Run YouTube Summarizer
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GMAIL_USERNAME: ${{ secrets.GMAIL_USERNAME }}
        GMAIL_PASSWORD: ${{ secrets.GMAIL_PASSWORD }}
        RECIPIENT_EMAIL: ${{ secrets.RECIPIENT_EMAIL }}
      run: |
        MAX_SUMMARIES="${{ github.event.inputs.max_summaries || '5' }}"
        python youtube_summarizer.py "${{ steps.channel.outputs.channel_id }}" "$RECIPIENT_EMAIL" --git-commits-on "$MAX_SUMMARIES"

    - name: Summary report
      if: always()
      run: |
        echo "=== YouTube Summarizer Run Complete ==="
        echo "Channel: ${{ steps.channel.outputs.channel_id }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Triggered: ${{ github.event_name }}"
        echo "Time: $(date -u)"
        
        # Check if any summary files were created
        if [ -d "${{ steps.channel.outputs.channel_id }}" ]; then
          SUMMARY_COUNT=$(find "${{ steps.channel.outputs.channel_id }}" -name "*.md" | wc -l)
          echo "Total summaries in channel folder: $SUMMARY_COUNT"
        else
          echo "No channel folder found"
        fi